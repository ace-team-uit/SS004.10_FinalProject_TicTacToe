name: Code Quality Check

on:
  push:
    branches:
      - main # Ch·ªâ ch·∫°y khi push tr·ª±c ti·∫øp v√†o main
  pull_request:
    branches:
      - "**" # Ch·∫°y khi m·ªü ho·∫∑c c·∫≠p nh·∫≠t PR v√†o b·∫•t k·ª≥ nh√°nh n√†o

jobs:
  check-code:
    name: Check Variable Names & Spelling
    runs-on: ubuntu-latest

    steps:
      # B∆∞·ªõc 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # B∆∞·ªõc 2: C√†i codespell ƒë·ªÉ ki·ªÉm tra ch√≠nh t·∫£
      - name: Install codespell
        run: pip install codespell

      # B∆∞·ªõc 3: Ki·ªÉm tra ch√≠nh t·∫£ (b·ªè qua c√°c t·ª´ trong .codespell-ignore)
      - name: Run codespell
        run: codespell --ignore-words=.codespell-ignore --skip="*.min.js,*.min.css,*.png,*.jpg,*.gif,*.woff,*.ttf" .

      # B∆∞·ªõc 4: Ki·ªÉm tra t√™n bi·∫øn trong file JS
      - name: Check variable naming convention
        run: |
          echo "üîç Checking variable naming in JS files..."

          invalid_vars=$(grep -rP '^\s*(const|let|var)\s+[A-Z][A-Za-z0-9_]*\s*=' . \
            | grep -vP '=\s*(\(|<)?\s*(function\s*\(|\(?\s*[A-Za-z0-9_]+\s*\)?\s*=>)' || true)

          if [ ! -z "$invalid_vars" ]; then
            echo "‚ùå Invalid variable names found (should be camelCase, not start with uppercase unless it is a Component):"
            echo "$invalid_vars"
            exit 1
          fi
          echo "‚úÖ Variable naming check passed!"
